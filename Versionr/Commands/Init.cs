using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Versionr.Commands
{
    class InitVerbOptions : VerbOptionBase
    {
        public override string Usage
        {
            get
            {
                return "versionr init [branch name]";
            }
        }
        public override string[] Description
        {
            get
            {
                return new string[]
                {
                    "This command creates a new, empty repository under Versionr control.",
                    "",
                    "As part of this process, an initial (empty) commit is autogenerated",
                    "by Versionr to act as the root of the repository.",
                    "",
                    "This command will also initialize the object storage mechanism that",
                    "the repository will subsequently use. Once initialized, this cannot",
                    "be changed without cloning or creating a new repository.",
                    "",
                    "This operation will fail if the current directory is already part",
                    "of a Versionr repository tree.",
                };
            }
        }

        public override string Verb
        {
            get
            {
                return "init";
            }
        }

        [CommandLine.ValueOption(0)]
        public string BranchName { get; set; }
    }
    class Init : BaseCommand
    {
        public bool Run(System.IO.DirectoryInfo workingDirectory, object options)
        {
            InitVerbOptions localOptions = options as InitVerbOptions;
            Printer.EnableDiagnostics = localOptions.Verbose;
            if (string.IsNullOrEmpty(localOptions.BranchName))
                localOptions.BranchName = "master";
            Area ws = Area.Init(workingDirectory, localOptions.BranchName);
            if (ws == null)
                return false;

            System.Console.WriteLine("Version {0} on branch \"{1}\"\n", ws.Version.ID, ws.CurrentBranch.Name);

            return true;
        }
    }
}
