<UserControl x:Class="VersionrUI.Controls.VersionrPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:VersionrUI"
             xmlns:vm="clr-namespace:VersionrUI.ViewModels"
             xmlns:controls="clr-namespace:VersionrUI.Controls"
             xmlns:commands="clr-namespace:VersionrUI.Commands"
             xmlns:mahapps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:gvvm="clr-namespace:Graphviz4Net.WPF.ViewModels;assembly=Graphviz4Net.WPF"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Name="self">

    <UserControl.Resources>

        <local:MultilineStringConverter x:Key="MultilineStringConverter" />
        <local:ColorToSolidBrushConverter x:Key="colorToSolidBrushConverter" />

        <DataTemplate DataType="{x:Type vm:AreaVM}">
            <Grid>
                <Grid Opacity="{Binding Opacity}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0"
                                Margin="8"
                                Content="Refresh Area"
                                Command="{Binding RefreshCommand}"
                                Style="{StaticResource LinkButtonStyle}" />
                        <StackPanel Grid.Column="1"
                                    Margin="8"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <Label Content="Remote"
                                   VerticalAlignment="Center" />
                            <ComboBox ItemsSource="{Binding Remotes}"
                                      SelectedItem="{Binding SelectedRemote}"
                                      Height="20" Width="100"
                                      DisplayMemberPath="Name" />
                        </StackPanel>
                        <StackPanel Grid.Column="2"
                                    Margin="8"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <Label Content="Branch"
                                   VerticalAlignment="Center" />
                            <ComboBox ItemsSource="{Binding Branches}"
                                      SelectedItem="{Binding SelectedBranch}"
                                      Height="20" Width="150" >
                                <ComboBox.Resources>
                                    <DataTemplate DataType="{x:Type vm:BranchVM}">
                                        <TextBlock Text="{Binding Name}">
                                            <TextBlock.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Pull" Command="{Binding PullCommand}" />
                                                    <MenuItem Header="Push" Command="{Binding PushCommand}" />
                                                    <MenuItem Header="Checkout" Command="{Binding CheckoutCommand}" />
                                                    <MenuItem Header="View log..." Command="{Binding LogCommand}" />
                                                    <MenuItem Header="Create Pull Request" Command="{Binding CreatePullRequestCommand}" />
                                                </ContextMenu>
                                            </TextBlock.ContextMenu>
                                            <TextBlock.Resources>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                            <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsDeleted}" Value="True">
                                                            <Setter Property="TextBlock.Foreground" Value="Gray"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Resources>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.Resources>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Grid.Column="3"
                                    Margin="8"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <RadioButton Margin="8,0"
                                         GroupName="radioGroup2"
                                         IsChecked="{Binding IsStatusSelected}"
                                         Content="Status" />
                            <RadioButton Margin="8,0"
                                         GroupName="radioGroup2"
                                         IsChecked="{Binding IsHistorySelected}"
                                         Content="History" />
                            <RadioButton Margin="8,0"
                                         GroupName="radioGroup2"
                                         IsChecked="{Binding IsGraphSelected}"
                                         Content="Graph" />
                            <TextBox x:Name="versionSearch" Margin="8,0"
                                     mahapps:TextBoxHelper.Watermark="Find version using GUID"
                                     Text="{Binding Path=VersionGUID, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="300" MaxHeight="20">
                                <TextBox.InputBindings>
                                    <KeyBinding Command="{Binding FindVersionCommand}" Key="Enter"></KeyBinding>
                                </TextBox.InputBindings>
                            </TextBox>
                            <Button Command="{Binding FindVersionCommand}" Content="Find" Style="{StaticResource LinkButtonStyle}"/>

                        </StackPanel>
                        
                        <Button Grid.Column="4"
                                Margin="8"
                                Content="Settings"
                                Command="{Binding SelectViewCommand}"
                                CommandParameter="{Binding Settings}"
                                Style="{StaticResource LinkButtonStyle}" />
                    </Grid>
                    <GridSplitter Grid.Row="1"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  ShowsPreview="True"
                                  Height="5"
                                  IsEnabled="False" />
                    <ContentPresenter Grid.Row="2"
                                      Content="{Binding SelectedVM}" />
                </Grid>
                <mahapps:ProgressRing IsActive="{Binding IsLoading}" />
            </Grid>
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type vm:BranchVM}">
            <Grid>
                <Grid Opacity="{Binding Opacity}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="400" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="80" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0"
                          Margin="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0">Search:</Label>
                        <TextBox Grid.Column="1"
                                 x:Name="logSearch"
                                 mahapps:TextBoxHelper.Watermark="Search"
                                 Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <Label Grid.Column="2">Limit:</Label>
                        <ComboBox Grid.Column="3"
                                  SelectedValuePath="Key"
                                  DisplayMemberPath="Value"
                                  ItemsSource="{Binding RevisionLimitOptions, ElementName=self}"
                                  SelectedValue="{Binding RevisionLimit}" />
                    </Grid>
                    <ListView Grid.Row="1"
                              x:Name="listView"
                              ItemsSource="{Binding History}"
                              SelectedItem="{Binding SelectedVersion, Mode=TwoWay}"
                              SelectionMode="Single"
                              GridViewColumnHeader.Click="listViewHeader_Click"
                              ScrollViewer.IsDeferredScrollingEnabled="False"
                              Style="{StaticResource VirtualisedMetroListView}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="ID" DisplayMemberBinding="{Binding ShortName, Mode=OneWay}" />
                                <GridViewColumn Header="Author" DisplayMemberBinding="{Binding Author, Mode=OneWay}" />
                                <GridViewColumn Header="Timestamp" DisplayMemberBinding="{Binding Timestamp, Mode=OneWay}" />
                                <GridViewColumn Header="Message">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Message, Mode=OneWay}"
                                                LineHeight="16" MaxHeight="16"
                                                TextWrapping="NoWrap"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsCurrent}" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu>
                                            <MenuItem Header="Copy Info To Clipboard" Command="{Binding CopyInfoCommand}"/>
                                            <MenuItem Header="Generate Patch File" Command="{Binding GeneratePatchFileCommand}"/>
                                            <MenuItem Header="Create Review" Command="{Binding CreateReviewCommand}"/>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    
                    <GridSplitter Grid.Row="2"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  ShowsPreview="True"
                                  Height="5" />
                    
                    <TextBox Grid.Row="3"
                             Text="{Binding Path=SelectedVersion.Message, Mode=OneWay}"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             ScrollViewer.HorizontalScrollBarVisibility="Auto"
                             IsReadOnly="True"/>
                    
                    <GridSplitter Grid.Row="4"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  ShowsPreview="True"
                                  Height="5" />

                    <Grid Grid.Row="5"
                          Margin="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0">Search:</Label>
                        <TextBox Grid.Column="1"
                                 x:Name="alterationSearch"
                                 mahapps:TextBoxHelper.Watermark="Search"
                                 Text="{Binding SelectedVersion.SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    </Grid>
                    <ContentPresenter Grid.Row="6" Content="{Binding SelectedItem, ElementName=listView}" />
                </Grid>
                <mahapps:ProgressRing IsActive="{Binding IsLoading}" />
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:VersionVM}">
            <ListView Grid.Row="0"
                      ItemsSource="{Binding Alterations}"
                      SelectionMode="Single"
                      GridViewColumnHeader.Click="listViewHeader_Click"
                      ScrollViewer.IsDeferredScrollingEnabled="False"
                      Style="{StaticResource VirtualisedMetroListView}"
                      PreviewMouseDown="listView_PreviewMouseDown"
                      MouseMove="listView_MouseMove">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name, Mode=OneWay}" />
                        <GridViewColumn Header="Type" DisplayMemberBinding="{Binding AlterationType, Mode=OneWay}" />
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu>
                                    <MenuItem Header="Diff with previous version" FontWeight="Bold" Command="{Binding DiffWithPreviousCommand}" />
                                    <MenuItem Header="Diff with working version" Command="{Binding DiffWithCurrentCommand}" />
                                    <MenuItem Header="View log..." Command="{Binding LogCommand}" />
                                    <MenuItem Header="Save this version as..." Command="{Binding SaveVersionAsCommand}" />
                                    <MenuItem Header="Open location in Explorer" Command="{Binding OpenInExplorerCommand}" />
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="commands:ControlDoubleClick.Command" Value="{Binding DiffWithPreviousCommand}" />
                        <Setter Property="commands:ControlDoubleClick.Parameter" Value="{Binding}" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:StatusVM}">
            <Grid>
                <Grid Opacity="{Binding Opacity}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0">
                        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                            <Button Content="Refresh Status"
                                    Command="{Binding RefreshCommand}"
                                    Style="{StaticResource LinkButtonStyle}" />
                            <Button Content="Create Branch"
                                    Command="{Binding CreateBranchCommand}"
                                    Style="{StaticResource LinkButtonStyle}" />
                            <Button Content="Commit"
                                    Command="{Binding CommitCommand}"
                                    Style="{StaticResource LinkButtonStyle}" />
                            <CheckBox Margin="4"
                                        Content="Push after commit"
                                        IsChecked="{Binding PushOnCommit}" />
                        </StackPanel>
                        <CheckBox DockPanel.Dock="Bottom" Margin="4" Content="Select all" IsThreeState="True" IsChecked="{Binding AllStaged}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" MinHeight="80" />
                                <RowDefinition Height="34" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0"
                                       Margin="4" Text="Message:" />
                            <TextBox Grid.Column="1" Grid.Row="0"
                                     Margin="4"
                                     mahapps:TextBoxHelper.Watermark="Message"
                                     Text="{Binding CommitMessage}"
                                     TextWrapping="Wrap"
                                     AcceptsReturn="True" />
                            <TextBlock Grid.Column="0" Grid.Row="1"
                                       VerticalAlignment="Center"
                                       Margin="4" Text="Tags:" />
                            <StackPanel Grid.Column="1" Grid.Row="1"
                                        Orientation="Horizontal">
                                <ItemsControl Margin="4" ItemsSource="{Binding TagPresets}">
                                    <ItemsControl.Style>
                                        <Style TargetType="{x:Type ItemsControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding TagPresets.Count}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <ItemsControl Margin="4" ItemsSource="{Binding CustomTags}">
                                    <ItemsControl.Style>
                                        <Style TargetType="{x:Type ItemsControl}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CustomTags.Count}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <TextBox x:Name="newTagText" Margin="4" Width="90" Height="20"
                                         mahapps:TextBoxHelper.Watermark="New tag"
                                         TextChanged="newTagText_TextChanged"
                                         KeyUp="newTagText_KeyUp"
                                         Text="{Binding TagString}"
                                         ToolTip="Tags must consist of one word prefixed with a hash (#) character" />
                                <Button Content="Add"
                                        Height="20"
                                        Command="{Binding AddTagCommand}"
                                        CommandParameter="{Binding ElementName=newTagText}"
                                        ToolTip="Add new tag" />
                            </StackPanel>
                        </Grid>
                    </DockPanel>
                    <GridSplitter Grid.Row="1"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  ShowsPreview="True"
                                  Height="5" />
                    <ListView Grid.Row="2"
                              x:Name="listView"
                              ItemsSource="{Binding Elements}"
                              SelectionMode="Extended"
                              GridViewColumnHeader.Click="listViewHeader_Click"
                              ScrollViewer.IsDeferredScrollingEnabled="False"
                              Style="{StaticResource VirtualisedMetroListView}"
                              BorderThickness="0"
                              PreviewMouseDown="listView_PreviewMouseDown"
                              MouseMove="listView_MouseMove">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Staged">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsStaged, Mode=OneWay}"
                                                      Click="CheckBox_Clicked" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Code" DisplayMemberBinding="{Binding Code, Mode=OneWay}" />
                                <GridViewColumn Header="Name" DisplayMemberBinding="{Binding CanonicalName, Mode=OneWay}" />
                                <GridViewColumn Header="IsDirectory">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsDirectory, Mode=OneWay}" IsEnabled="False" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu>
                                            <MenuItem Header="Diff" FontWeight="Bold" Command="{Binding DiffCommand}" />
                                            <MenuItem Header="View log..." Command="{Binding LogCommand}" />
                                            <MenuItem Header="Revert" Command="{Binding RevertCommand}" />
                                            <MenuItem Header="Open location in Explorer" Command="{Binding OpenInExplorerCommand}" />
                                            <MenuItem Header="Generate Patch File" Command="{Binding GeneratePatchFileCommand}"/>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="commands:ControlDoubleClick.Command" Value="{Binding DiffCommand}" />
                                <Setter Property="commands:ControlDoubleClick.Parameter" Value="{Binding}" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    <GridSplitter Grid.Row="3"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  ShowsPreview="True"
                                Height="5" />
                    <controls:BindableRichTextBox Grid.Row="4"
                                                  Document="{Binding SelectedItem.DiffPreview, ElementName=listView}"
                                                  IsReadOnly="True"
                                                  FontFamily="Consolas"
                                                  HorizontalScrollBarVisibility="Auto"
                                                  VerticalScrollBarVisibility="Auto"
                                                  BorderBrush="DarkSlateGray" />
                </Grid>
                <mahapps:ProgressRing IsActive="{Binding IsLoading}" />
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:GraphVM}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0"
                      Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="1"
                                Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding ShowMessages}" />
                        <TextBlock Margin="4">Show messages</TextBlock>
                        <Separator />
                        <TextBlock Margin="4">Limit:</TextBlock>
                        <ComboBox SelectedValuePath="Key"
                                  DisplayMemberPath="Value"
                                  ItemsSource="{Binding RevisionLimitOptions, ElementName=self}"
                                  SelectedValue="{Binding RevisionLimit}" />
                    </StackPanel>
                </Grid>
                <ScrollViewer Grid.Row="1"
                              HorizontalScrollBarVisibility="Visible"
                              VerticalScrollBarVisibility="Visible">
                    <ScrollViewer.Style>
                        <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Type ScrollViewer}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding GraphLayout}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ScrollViewer.Style>
                    <ContentPresenter Content="{Binding GraphLayout}">
                        <ContentPresenter.Resources>
                            <DataTemplate DataType="{x:Type vm:GraphNode}">
                                <Border BorderBrush="{Binding Color, Converter={StaticResource colorToSolidBrushConverter}}" BorderThickness="1" Padding="0" CornerRadius="5">
                                    <TextBlock Margin="6"
                                               Text="{Binding Label}"
                                               TextAlignment="Center"
                                               ToolTip="{Binding Version.Message}" />
                                </Border>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type gvvm:EdgeViewModel}">
                                <Path Data="{Binding Data}"
                                      Stroke="{Binding Edge.Link.Color, Converter={StaticResource colorToSolidBrushConverter}}"
                                      StrokeThickness="1"
                                      ToolTip="{Binding Edge.Link.BranchName}"
                                      Fill="Transparent">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Edge.Link.IsMerge}" Value="true">
                                                    <Setter Property="StrokeDashArray" Value="2,2" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type vm:NullArrow}">
                                <Line X1="0" Y1="0" X2="0" Y2="10"
                                      Stroke="{Binding Link.Color, Converter={StaticResource colorToSolidBrushConverter}}"
                                      StrokeThickness="1"
                                      ToolTip="{Binding Link.BranchName}">
                                    <Line.Style>
                                        <Style TargetType="{x:Type Line}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Link.IsMerge}" Value="true">
                                                    <Setter Property="StrokeDashArray" Value="2,2" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Line.Style>
                                </Line>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type vm:GraphArrow}">
                                <Path Data="M 0,0 L 10,0 L 5,5 L 0,0"
                                      Stroke="{Binding Link.Color, Converter={StaticResource colorToSolidBrushConverter}}"
                                      StrokeThickness="1"
                                      ToolTip="{Binding Link.BranchName}"
                                      Fill="Transparent" />
                            </DataTemplate>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </ScrollViewer>
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:SettingsVM}">
            <Grid>
                <Grid Opacity="{Binding Opacity}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Vertical">
                        <RadioButton Margin="8,4" GroupName="radioGroup1" Command="{Binding OptionChangedCommand}" CommandParameter="{x:Static vm:SettingsViewMode.Meta}" Content="Repo settings" />
                        <RadioButton Margin="8,4" GroupName="radioGroup1" Command="{Binding OptionChangedCommand}" CommandParameter="{x:Static vm:SettingsViewMode.UserGlobal}" Content="Global user settings" />
                        <RadioButton Margin="8,4" GroupName="radioGroup1" Command="{Binding OptionChangedCommand}" CommandParameter="{x:Static vm:SettingsViewMode.User}" Content="User" />
                        <RadioButton Margin="8,4" GroupName="radioGroup1" Command="{Binding OptionChangedCommand}" CommandParameter="{x:Static vm:SettingsViewMode.Effective}" Content="Effective settings" IsChecked="True" />
                    </StackPanel>
                    <GroupBox Grid.Row="1"
                              Margin="8,4"
                              Header="{Binding SettingsHeader}">
                        <Grid DataContext="{Binding SubSettings}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Button Grid.Row="0"
                                    HorizontalAlignment="Left"
                                    Command="{Binding SaveCommand}"
                                    Content="Save changes"
                                    Style="{DynamicResource LinkButtonStyle}"
                                    Visibility="{Binding SaveButtonVisibility}" />
                            <ScrollViewer Grid.Row="1">
                                <Grid ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Margin="8,4,8,8" 
                                               Text="{Binding Error}"
                                               Visibility="{Binding ErrorVisibility}"
                                               Foreground="{DynamicResource ValidationBrush5}"
                                               FontWeight="Bold" />
                                    <Label Grid.Column="0" Grid.Row="1" Margin="4" Content="UserName"
                                           mahapps:TextBoxHelper.Watermark="{Binding UserNameWatermark}" />
                                    <TextBox Grid.Column="1" Grid.Row="1" Margin="4" Text="{Binding UserName}" IsReadOnly="{Binding IsReadOnly}" />
                                    <Label Grid.Column="0" Grid.Row="2" Margin="4" Content="External Diff" />
                                    <TextBox Grid.Column="1" Grid.Row="2" Margin="4" Text="{Binding ExternalDiff}" IsReadOnly="{Binding IsReadOnly}" />
                                    <Label Grid.Column="0" Grid.Row="3" Margin="4" Content="External Merge (2 way)" />
                                    <TextBox Grid.Column="1" Grid.Row="3" Margin="4" Text="{Binding ExternalMerge2Way}" IsReadOnly="{Binding IsReadOnly}" />
                                    <Label Grid.Column="0" Grid.Row="4" Margin="4" Content="External Merge (3 way)" />
                                    <TextBox Grid.Column="1" Grid.Row="4" Margin="4" Text="{Binding ExternalMerge}" IsReadOnly="{Binding IsReadOnly}" />
                                    <Label Grid.Column="0" Grid.Row="5" Margin="4" Content="Ignores" />
                                    <ContentPresenter Grid.Column="1" Grid.Row="5" Content="{Binding Ignores}" />
                                    <Label Grid.Column="0" Grid.Row="6" Margin="4" Content="Includes" />
                                    <ContentPresenter Grid.Column="1" Grid.Row="6" Content="{Binding Includes}" />
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                    </GroupBox>
                </Grid>
                <mahapps:ProgressRing IsActive="{Binding IsLoading}" />
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:IgnoresVM}">
            <WrapPanel>
                <StackPanel Orientation="Vertical">
                    <Label Content="Directory Patterns" />
                    <TextBox Margin="4,2" Height="300" Width="280"
                             HorizontalAlignment="Left"
                             Text="{Binding DirectoryPatterns, Converter={StaticResource MultilineStringConverter}}"
                             IsReadOnly="{Binding IsReadOnly}" AcceptsReturn="True" />
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Label Content="File Patterns" />
                    <TextBox Margin="4,2" Height="300" Width="280"
                             HorizontalAlignment="Left"
                             Text="{Binding FilePatterns, Converter={StaticResource MultilineStringConverter}}"
                             IsReadOnly="{Binding IsReadOnly}" AcceptsReturn="True" />
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Label Content="Directories" />
                    <TextBox Margin="4,2" Height="300" Width="280"
                             HorizontalAlignment="Left"
                             Text="{Binding Directories, Converter={StaticResource MultilineStringConverter}}"
                             IsReadOnly="{Binding IsReadOnly}" AcceptsReturn="True" />
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Label Content="Extensions" />
                    <TextBox Margin="4,2" Height="300" Width="280"
                             HorizontalAlignment="Left"
                             Text="{Binding Extensions, Converter={StaticResource MultilineStringConverter}}"
                             IsReadOnly="{Binding IsReadOnly}" AcceptsReturn="True" />
                </StackPanel>
                <StackPanel Orientation="Vertical">
                    <Label Content="Patterns" />
                    <TextBox Margin="4,2" Height="300" Width="280"
                             HorizontalAlignment="Left"
                             Text="{Binding Patterns, Converter={StaticResource MultilineStringConverter}}"
                             IsReadOnly="{Binding IsReadOnly}" AcceptsReturn="True" />
                </StackPanel>
            </WrapPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:TagPresetVM}">
            <CheckBox VerticalAlignment="Center"
                      Margin="4"
                      Content="{Binding Tag}"
                      ToolTip="{Binding Description}"
                      IsChecked="{Binding IsChecked}" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:CustomTagVM}">
            <StackPanel VerticalAlignment="Center"
                        Margin="4" Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center"
                           Text="{Binding Tag}" />
                <Button Content="X"
                        Margin="2"
                        BorderThickness="0"
                        VerticalAlignment="Center"
                        Command="{Binding DataContext.RemoveTagCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                        CommandParameter="{Binding Tag}" />
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <DockPanel LastChildFill="True" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                <Path x:Name="arrowUp" StrokeThickness="1" Fill="Gray" Data="M 5,10 L 15,10 L 10,5 L 5,10" DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0" SnapsToDevicePixels="True"/>
                <TextBlock Text="{Binding }" />
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <DockPanel LastChildFill="True" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GridViewColumnHeader}}}">
                <Path x:Name="arrowDown" StrokeThickness="1" Fill="Gray"  Data="M 5,5 L 10,10 L 15,5 L 5,5" DockPanel.Dock="Right" Width="20" HorizontalAlignment="Right" Margin="5,0,5,0" SnapsToDevicePixels="True"/>
                <TextBlock Text="{Binding }" />
            </DockPanel>
        </DataTemplate>

    </UserControl.Resources>
    
    <Grid x:Name="mainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="200" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0">
            <Button Content="Clone/Init"
                    Command="{Binding NewAreaCommand}"
                    ToolTip="Clone or create a new local repository"
                    Style="{StaticResource LinkButtonStyle}" />
            <ListBox ItemsSource="{Binding OpenAreas}"
                        SelectedItem="{Binding SelectedArea}">
                <ListBox.Resources>
                    <local:BindingProxy x:Key="ListBoxDataContext" Data="{Binding OpenAreas}"/>
                </ListBox.Resources>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="4">
                            <TextBlock Text="{Binding Name}"
                                        FontWeight="Bold" />
                            <TextBlock Text="{Binding Directory.FullName}" />
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Open in Explorer" Command="{Binding OpenInExplorerCommand}" />
                                    <MenuItem Header="Remove" Command="{Binding RemoveRepoFromListCommand}" 
                                              CommandParameter="{Binding Data, Source={StaticResource ListBoxDataContext}}"/>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
        <GridSplitter Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Stretch"
                        ShowsPreview="True"
                        Width="5" />
        <ContentPresenter Grid.Column="2"
                            Content="{Binding SelectedArea}" />
    </Grid>
    
</UserControl>
